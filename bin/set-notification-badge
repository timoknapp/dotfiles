#!/usr/bin/env bash

# --------- IMPORTANT ---------
# 1. Make sure that "/usr/bin/env" has full Disk access on your MacOS. Otherwhise this will not be able to read the Do Not Disturb status.
#    MacOS System Settings > Privacy & Security > Full Disk Access > Click "+" and add /usr/bin/env
# 2. Enable LaunchAgent to run this script when Do Not Disturb is toggled.
# 	 - Modify config/dndwatcher/com.timoknapp.dndwatcher.plist to update the HOMEDIR_PLACEHOLDER with you /Users/username
#    - Copy config/dndwatcher/com.timoknapp.dndwatcher.plist to ~/Library/LaunchAgents
#    - Run: launchctl load ~/Library/LaunchAgents/com.timoknapp.dndwatcher.plist
# 3. Try it out by toggling Do Not Disturb in MacOS
# -----------------------------

function doNotDisturb()(
	OS_major="$(sw_vers -productVersion | cut -d. -f1)"
	consoleUserID="$(stat -f %u /dev/console)"
	consoleUser="$(stat -f %Su /dev/console)"
	
	#get Do Not Disturb status
	if [ "${OS_major}" -ge "12" ]; then
		consoleUserHomeFolder=$(dscl . -read /Users/"${consoleUser}" NFSHomeDirectory | awk -F ': ' '{print $2}')
		file_assertions="${consoleUserHomeFolder}/Library/DoNotDisturb/DB/Assertions.json"

		# echo "File Exists: $([ -f "${file_assertions}" ] && echo "exists" || echo "does not exist")" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
		# echo "DND Status: $(grep -q "storeAssertionRecords" "${file_assertions}" 2>/dev/null && echo "ON" || echo "OFF")" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
		#if Assertions.json file does NOT exist, then DnD is OFF
		[ ! -f "${file_assertions}" ] && false

		# echo "$(cat "$file_assertions" && echo "showed" || echo "no show")" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
		#simply check for storeAssertionRecords existence, usually found at: /data/0/storeAssertionRecords (and only exists when ON)
		grep -q "storeAssertionRecords" "${file_assertions}" 2>/dev/null && true || false
	else
		echo "$(date): MacOS version ($OS_major) is not supported. It is not 12 or higher." >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
		false
	fi
)
if doNotDisturb; then
	# If doNotDisturb returns 0, then DND is ON	
  	echo "$(date): 🕵️‍♂️ Do Not Disturb is ON > Disabling Badge Icons" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
	python3 ~/.dotfiles/config/dndwatcher/nc-prefs-util.py --disable
else
	# If doNotDisturb returns 1, then DND is OFF
  	echo "$(date): 🕵️‍♂️ Do Not Disturb is OFF > Enabling Badge Icons" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
	python3 ~/.dotfiles/config/dndwatcher/nc-prefs-util.py --enable
	# defaults import com.apple.ncprefs - < ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
	# killall NotificationCenter && killall usernoted
	# rm ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
fi
defaults import com.apple.ncprefs - < ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
killall NotificationCenter && killall usernoted
rm ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist

# --------- Legacy solution ---------

# # Wait for 5 seconds to make sure that Do Not Disturb is properly set in macos defaults.
# sleep 5
# isDndEnabled=$(defaults read com.apple.controlcenter "NSStatusItem Visible FocusModes")
# echo "$(date): 🐈 Do Not Disturb status: $isDndEnabled" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log

# echo "PID: $$, PPID: $PPID, UID: $UID, SHELL: $SHELL, CMD: $0" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
# echo "DoNotDisturb: $(ls -la ~/Library/DoNotDisturb/DB/Assertions.json)" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log

# # TODO: Make importing and exporting more dynamic
# if [[ "$isDndEnabled" == "1" ]]; then
#   # Disable Notification Badge as DND is enabled
#   # disableCommand=$(python3 ~/.dotfiles/config/dndwatcher/nc-prefs-util.py --disable)
#   # echo "$(disableCommand)" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
#   python3 ~/.dotfiles/config/dndwatcher/nc-prefs-util.py --disable
#   defaults import com.apple.ncprefs - < ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
#   rm ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
#   killall NotificationCenter && killall usernoted
# else
#   # Enable Notification Badge as DND is disabled
#   # enableCommand=$(python3 ~/.dotfiles/config/dndwatcher/nc-prefs-util.py --enable)
#   # echo "$(enableCommand)" >> ~/.dotfiles/config/dndwatcher/dndwatcher.log
#   python3 ~/.dotfiles/config/dndwatcher/nc-prefs-util.py --enable
#   defaults import com.apple.ncprefs - < ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
#   rm ~/.dotfiles/config/dndwatcher/com.apple.ncprefs.plist
#   killall NotificationCenter && killall usernoted
# fi
